using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public struct pos
{
    public int xx, yy;
};

public class MainScript : MonoBehaviour
{
    int n = 8;
    int[,] arr;

    void initArr()
    {
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                arr[i, j] = -1;
    }

    void createWalls()
    {
        for (int i = 0; i < n; i++)
        {
            arr[0, i] = 999;
            arr[n - 1, i] = 999;
            arr[i, 0] = 999;
            arr[i, n - 1] = 999;
        }

        for (int i = 0; i < 5; i++) arr[i, 3] = 999;
        arr[4, 4] = 999;
        arr[4, 5] = 999;
    }

    void createWave()
    {
        arr[1, 1] = 0;

        int waveSize = 0;

        for (waveSize = 0; waveSize <= n * n; waveSize++)
        {
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                {
                    if (arr[i, j] == waveSize)
                    {
                        if (arr[i - 1, j] == -1) arr[i - 1, j] = waveSize + 1;
                        if (arr[i, j + 1] == -1) arr[i, j + 1] = waveSize + 1;
                        if (arr[i, j - 1] == -1) arr[i, j - 1] = waveSize + 1;
                        if (arr[i + 1, j] == -1) arr[i + 1, j] = waveSize + 1;
                    }
                }
        }
    }

    pos[] posArr;
    int k = 0;

    void getBackWay()
    {
        int nowY = 2;
        int nowX = 4;

        while(arr[nowY, nowX] != 0)
        {
            Debug.Log("Y: " + nowY + "   X: " + nowX);
            posArr[k].yy = nowY;
            posArr[k].xx = nowX;       
            k++;

            if (arr[nowY - 1, nowX] < arr[nowY, nowX])
                nowY--;
            else if (arr[nowY + 1, nowX] < arr[nowY, nowX])
                nowY++;
            else if (arr[nowY, nowX - 1] < arr[nowY, nowX])
                nowX--;
            else if (arr[nowY, nowX + 1] < arr[nowY, nowX])
                nowX++;
        }

        Debug.Log("Y: " + nowY + "   X: " + nowX);
        posArr[k].yy = nowY;
        posArr[k].xx = nowX;
        k++;
    }

    void make3D()
    {
        for(int i = 0; i < k; i++)
        {
            GameObject sss = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            sss.transform.position = new Vector3(posArr[i].xx, posArr[i].yy, 0);
        }
    }

    void Start()
    {
        arr = new int[n, n];
        initArr();
        createWalls();
        createWave();
        posArr = new pos[n * n];
        getBackWay();
        make3D();
    }

    void OnGUI()
    {
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
            {
                int value = arr[i, j];
                int xx = j * 40;
                int yy = i * 40;
                GUI.Button(new Rect(xx, yy, 40, 40), value + "");
            }
    }
}


